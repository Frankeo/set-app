"use strict";(self.webpackChunk_set_app_docs=self.webpackChunk_set_app_docs||[]).push([[570],{8044:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"default-values","metadata":{"permalink":"/set-app/blog/default-values","source":"@site/blog/2023-02-23-default-values/index.md","title":"Default Values","description":"NPM","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"npm","permalink":"/set-app/blog/tags/npm"},{"label":"config","permalink":"/set-app/blog/tags/config"},{"label":"Readme","permalink":"/set-app/blog/tags/readme"}],"readingTime":1.625,"hasTruncateMarker":false,"authors":[{"name":"Francisco Leonel Moreno Eraso","title":"Maintainer of SetApp","url":"https://github.com/Frankeo","imageURL":"https://github.com/Frankeo.png","key":"fran"}],"frontMatter":{"slug":"default-values","title":"Default Values","authors":"fran","tags":["npm","config","Readme"]}},"content":"## NPM\\n\\nIn [SetApp](https://www.npmjs.com/package/@set-app/cli) we focus on build the tools around technologies that we already use.\\nOne of them is [NPM](https://www.npmjs.com) who is in charge of generate our `package.json`, so in a fresh machine with the default config, it would look like:\\n\\n![Default package.json](./package-json.png)\\n\\nThere is some config, like the **description** that is different between projects and because of that, it\'s taken care with our tool\\n\\n:::tip Please Check the Docs \ud83d\ude4f\ud83c\udffb\\nPlease, check the `Cli Commands` documentation section for more info about this topic\\n:::\\n\\nOn the other hand we have common info that we could be shared between projects, for some of them, like the `License` or the `Version` we have default values (**ISC** and **1.0.0**). Other values like the `Author` are not even set.\\n\\n:::info\\nThis default behaviour could be changed! The following list of values could be set, and in fact, we recommend that!\\n:::\\n\\n### Author Url\\n\\nYou could set your personal webpage\\n\\n```bash\\nnpm config set init-author-url=\\"<URL>\\"\\n```\\n\\n### License\\n\\nYou could set a default license (**current default value: `ISC`**)\\n\\n```bash\\nnpm config set init-license=\\"<LICENSE>\\"\\n```\\n\\n### Intial Version\\n\\nYou could set a default version (**current default value: `1.0.0`**)\\n\\n```bash\\nnpm config set init-version=\\"<VERSION>\\"\\n```\\n\\n### Author Email\\n\\nYou could set an author email to contact\\n\\n```bash\\nnpm config set init-author-email=\\"<EMAIL>\\"\\n```\\n\\n### Author Name\\n\\nYou could set a default author name\\n\\n```bash\\nnpm config set init-author-name\\"<NAME>\\"\\n```\\n\\nIf we execute those commands the result will be a `package.json` similar to the next one:\\n\\n![Full package.json](./package-json-full.png)\\n\\n## README\\n\\nNot only that, other tools used in `SetApp` use these values, for example our README generator: [readme-md-generator](https://github.com/kefranabg/readme-md-generator).\\n\\n### Before\\n\\n![README](./README.png)\\n\\n### After\\n\\n![README-FULL](./README-FULL.png)\\n\\n## Full Example App\\n\\nRunning a command similar to:\\n\\n![Example command](./example-command.png)\\n\\nThe README generated would look like:\\n\\n![Example README](./README-EXAMPLE.png)\\n\\n:::tip Have in mind \ud83d\ude4f\ud83c\udffb\\nMore info will be added when we integrate with a `Github repo`, so the `package.json` and the `README` would have even more content\\n:::"}]}')}}]);