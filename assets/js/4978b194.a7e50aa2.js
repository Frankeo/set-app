"use strict";(self.webpackChunk_set_app_docs=self.webpackChunk_set_app_docs||[]).push([[570],{8044:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"dev-containers","metadata":{"permalink":"/set-app/blog/dev-containers","source":"@site/blog/2023-06-02-dev-containers/index.md","title":"Dev Containers and my \\"local\\" approach","description":"DevContainers","date":"2023-06-02T00:00:00.000Z","formattedDate":"June 2, 2023","tags":[{"label":"dev-containers","permalink":"/set-app/blog/tags/dev-containers"},{"label":"docker","permalink":"/set-app/blog/tags/docker"},{"label":"vscode","permalink":"/set-app/blog/tags/vscode"}],"readingTime":1.255,"hasTruncateMarker":false,"authors":[{"name":"Francisco Leonel Moreno Eraso","title":"Maintainer of SetApp","url":"https://github.com/Frankeo","imageURL":"https://github.com/Frankeo.png","key":"fran"}],"frontMatter":{"slug":"dev-containers","title":"Dev Containers and my \\"local\\" approach","authors":"fran","tags":["dev-containers","docker","vscode"]},"nextItem":{"title":"Default Values","permalink":"/set-app/blog/default-values"}},"content":"## DevContainers\\n\\n[DevContainers](https://code.visualstudio.com/docs/devcontainers/containers) is a technology based on **Docker** for develop inside local containers and as a big benefit we are isolated and we don\'t need to polute our primary OS with programming tools.\\n\\n**Github** is also compatible with this technology and base on **DevContainers** it is able to generate [Github Codespaces](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers) where you can work from your browser without the necesity of installing anything!\\n\\n:::info\\n**VSCode** has plugins related to this so work with a container instead of local environment would be seemless\\n:::\\n\\n## My Approach\\n\\nBase on this technology with a little bit of **`Docker`**, **`Scripting`** and **`Set-App`**, I\'ll manage to generate this development flow.\\n\\n### Pre-requisites\\n\\n- [Visual Studio Code](https://code.visualstudio.com) with the plugin for [Dev Containers](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)\\n\\n- [Docker Engine](https://docs.docker.com/engine/install/)\\n\\n### Scripting\\n\\nYou would need to create a simple file with:\\n\\nBASH **(Linux/Mac)**\\n\\n```bash\\ndocker volume create --name projects --opt type=none --opt device=\'<LOCAL-PATH>\' --opt o=bind\\ndocker pull franciscomoreno1/set-app:latest\\ndocker run -it -v projects:/projects -w /projects franciscomoreno1/set-app:latest /bin/sh\\n```\\n\\nReplace `<LOCAL-PATH>` with the path that you want to contain your projects in your local filesystem\\n\\n**Execute one time** the file and you would have prompt a console where to execute your `set-app` command:\\n\\n```bash\\nnpx @set-app/cli \'<PROJECT-NAME>\'\\n```\\n\\nThe first time is going to download the tool in the container but the following times just restarting the container would be enoght.\\n\\n:::tip Dev Container configuration \ud83d\ude0e\\nA set of **VSCode** plugins are already preconfigured for the use, but you could add new ones and just `Rebuild the DevContainer`\\n:::"},{"id":"default-values","metadata":{"permalink":"/set-app/blog/default-values","source":"@site/blog/2023-02-23-default-values/index.md","title":"Default Values","description":"NPM","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"npm","permalink":"/set-app/blog/tags/npm"},{"label":"config","permalink":"/set-app/blog/tags/config"},{"label":"Readme","permalink":"/set-app/blog/tags/readme"}],"readingTime":1.625,"hasTruncateMarker":false,"authors":[{"name":"Francisco Leonel Moreno Eraso","title":"Maintainer of SetApp","url":"https://github.com/Frankeo","imageURL":"https://github.com/Frankeo.png","key":"fran"}],"frontMatter":{"slug":"default-values","title":"Default Values","authors":"fran","tags":["npm","config","Readme"]},"prevItem":{"title":"Dev Containers and my \\"local\\" approach","permalink":"/set-app/blog/dev-containers"}},"content":"## NPM\\n\\nIn [SetApp](https://www.npmjs.com/package/@set-app/cli) we focus on build the tools around technologies that we already use.\\nOne of them is [NPM](https://www.npmjs.com) who is in charge of generate our `package.json`, so in a fresh machine with the default config, it would look like:\\n\\n![Default package.json](./package-json.png)\\n\\nThere is some config, like the **description** that is different between projects and because of that, it\'s taken care with our tool\\n\\n:::tip Please Check the Docs \ud83d\ude4f\ud83c\udffb\\nPlease, check the `Cli Commands` documentation section for more info about this topic\\n:::\\n\\nOn the other hand we have common info that we could be shared between projects, for some of them, like the `License` or the `Version` we have default values (**ISC** and **1.0.0**). Other values like the `Author` are not even set.\\n\\n:::info\\nThis default behaviour could be changed! The following list of values could be set, and in fact, we recommend that!\\n:::\\n\\n### Author Url\\n\\nYou could set your personal webpage\\n\\n```bash\\nnpm config set init-author-url=\\"<URL>\\"\\n```\\n\\n### License\\n\\nYou could set a default license (**current default value: `ISC`**)\\n\\n```bash\\nnpm config set init-license=\\"<LICENSE>\\"\\n```\\n\\n### Intial Version\\n\\nYou could set a default version (**current default value: `1.0.0`**)\\n\\n```bash\\nnpm config set init-version=\\"<VERSION>\\"\\n```\\n\\n### Author Email\\n\\nYou could set an author email to contact\\n\\n```bash\\nnpm config set init-author-email=\\"<EMAIL>\\"\\n```\\n\\n### Author Name\\n\\nYou could set a default author name\\n\\n```bash\\nnpm config set init-author-name\\"<NAME>\\"\\n```\\n\\nIf we execute those commands the result will be a `package.json` similar to the next one:\\n\\n![Full package.json](./package-json-full.png)\\n\\n## README\\n\\nNot only that, other tools used in `SetApp` use these values, for example our README generator: [readme-md-generator](https://github.com/kefranabg/readme-md-generator).\\n\\n### Before\\n\\n![README](./README.png)\\n\\n### After\\n\\n![README-FULL](./README-FULL.png)\\n\\n## Full Example App\\n\\nRunning a command similar to:\\n\\n![Example command](./example-command.png)\\n\\nThe README generated would look like:\\n\\n![Example README](./README-EXAMPLE.png)\\n\\n:::tip Have in mind \ud83d\ude4f\ud83c\udffb\\nMore info will be added when we integrate with a `Github repo`, so the `package.json` and the `README` would have even more content\\n:::"}]}')}}]);